buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"
apply plugin: 'war'

version = 'G7'
sourceCompatibility = 1.8


repositories {
    mavenCentral()
}

dependencies {
    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile ('org.springframework.boot:spring-boot-starter-data-jpa')
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    runtime("org.springframework.boot:spring-boot-starter-tomcat")

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'
    compile group: 'org.apache.lucene', name: 'lucene-core', version: '7.3.0'
    compile group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: '7.3.0'
    compile group: 'org.apache.lucene', name: 'lucene-queryparser', version: '7.3.0'
    compile group: 'org.apache.lucene', name: 'lucene-queries', version: '7.3.0'
    testCompile group: 'org.apache.lucene', name: 'lucene-codecs', version: '7.3.0'
    compile 'org.mongodb:mongo-java-driver:3.8.0-beta2'
    compile 'org.mongodb:mongodb-driver-core:3.8.0-beta2'
    compile group: 'org.apache.opennlp', name: 'opennlp-tools', version: '1.8.4'
    compile('org.springframework.boot:spring-boot-starter-security')

    testCompile('org.springframework.security:spring-security-test')

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
}
